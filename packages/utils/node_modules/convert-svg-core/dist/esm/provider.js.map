{"version":3,"file":"provider.js","sourceRoot":"","sources":["../../src/provider.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;GAoBG","sourcesContent":["/*\n * Copyright (C) 2025 neocotic\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport type { ImageFormat, ScreenshotOptions } from \"puppeteer-core\";\nimport type {\n  IConverterConvertOptions,\n  IConverterConvertOptionsParsed,\n} from \"./converter.js\";\n\n/**\n * Supports a single output format for SVG conversion.\n */\nexport interface IProvider<\n  ConvertOptions extends IConverterConvertOptions,\n  ConvertOptionsParsed extends IConverterConvertOptionsParsed,\n> {\n  /**\n   * The extension to be used for converted output files.\n   */\n  readonly extension: string;\n  /**\n   * The output image format as supported by {@link Page#screenshot}.\n   */\n  readonly format: ImageFormat;\n\n  /**\n   * Returns the background color to be used by the HTML page containing the SVG based on the `options` provided.\n   *\n   * The background color will only be applied to transparent sections of the SVG, if any.\n   *\n   * @param options The parsed convert options.\n   * @return The background color.\n   */\n  getBackgroundColor(options: ConvertOptionsParsed): string;\n\n  /**\n   * Returns any additional options that are to be passed to the {@link Page#screenshot} method belonging to\n   * `puppeteer-core` based on the `options` provided.\n   *\n   * This method returns an empty object to indicate that no additional options are to be passed, and any options\n   * returned by this method will override the core options, where applicable.\n   *\n   * @param options The parsed convert options.\n   * @return Any additional options for {@link Page#screenshot}.\n   */\n  getScreenshotOptions(options: ConvertOptionsParsed): ScreenshotOptions;\n\n  /**\n   * Parses and validates any additional options within `options` not present in `parsedOptions` for {@link IConverter}\n   * that are applicable to this {@link IProvider}.\n   *\n   * This method should not mutate either of the arguments and instead return a new options object consisting of\n   * `parsedOptions` as well as any options added by this {@link IProvider}.\n   *\n   * An error will occur if any of the options are invalid.\n   *\n   * @param options The original options being parsed.\n   * @param parsedOptions The parsed core options.\n   * @return The parsed options.\n   * @throws {Error} If an applicable option with `options` is invalid.\n   */\n  parseConverterOptions(\n    options: ConvertOptions | undefined,\n    parsedOptions: IConverterConvertOptionsParsed,\n  ): ConvertOptionsParsed;\n}\n"]}