services:
  api-gateway:
    image: rajat7121/toprisebackend-api-gateway:latest
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - product-service
    networks:
      - app-network

  user-service:
    image: rajat7121/toprisebackend-user-service:latest
    volumes:
      - ./services/user-service:/app
      - ./packages:/packages
    ports:
      - "5001:5001"
    networks:
      - app-network
    depends_on:
      - rabbitmq

  product-service:
    image: rajat7121/toprisebackend-product-service:latest
    volumes:
      - ./services/product-service:/app
      - ./packages:/packages
    ports:
      - "5002:5001"
    networks:
      - app-network
    depends_on:
      - rabbitmq

  stock-sweeper:
    image: rajat7121/toprisebackend-product-service:latest
    volumes:
      - ./services/product-service:/app # hot-reload
      - ./packages:/packages
    working_dir: /app
    command: ["node", "src/jobs/stockSweeper.js"]
    restart: always
    depends_on: [product-service]
    networks: [app-network]

  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    command: redis-server --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - ./docker-volumes/cache:/data
    networks:
      - app-network

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:latest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    restart: unless-stopped
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      discovery.type: "single-node"
      network.host: "0.0.0.0"
      http.host: "0.0.0.0"
      xpack.security.enabled: "false"
      bootstrap.memory_lock: "true"
      xpack.monitoring.collection.enabled: "true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - app-network

  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.13.4
    restart: always
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch_container:9200"
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - elastic

networks:
  elastic:
    driver: bridge
  app-network:
    driver: bridge
